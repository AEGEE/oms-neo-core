FROM phusion/baseimage:latest

MAINTAINER Mahmoud Zalt <mahmoud@zalt.me>

RUN DEBIAN_FRONTEND=noninteractive
RUN locale-gen en_US.UTF-8

#oms-core simply serves as a file system, therefore it only needs to check if it can access the files.
HEALTHCHECK --interval=30s --timeout=3s \
  CMD [ -f /var/www/app/Http/Kernel.php ]

ENV LANGUAGE=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV LC_CTYPE=en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV TERM xterm

# Add the "PHP 7" ppa
RUN apt-get install -y software-properties-common && \
    add-apt-repository -y ppa:ondrej/php

#
#--------------------------------------------------------------------------
# Software's Installation
#--------------------------------------------------------------------------
#

# Install "PHP Extentions", "libraries", "Software's"
RUN apt-get update && \
    apt-get install -y --allow-downgrades --allow-remove-essential \
        --allow-change-held-packages \
        php7.1-cli \
        php7.1-common \
        php7.1-curl \
        php7.1-json \
        php7.1-xml \
        php7.1-mbstring \
        php7.1-mcrypt \
        php7.1-mysql \
        php7.1-pgsql \
        php7.1-sqlite \
        php7.1-sqlite3 \
        php7.1-zip \
        php7.1-bcmath \
        php7.1-memcached \
        php7.1-gd \
        php7.1-dev \
        php7.1-intl \
        pkg-config \
        libcurl4-openssl-dev \
        libedit-dev \
        libssl-dev \
        libxml2-dev \
        xz-utils \
        libsqlite3-dev \
        sqlite3 \
        git \
        curl \
        vim \
        nano \
        postgresql-client \
        nodejs \
        npm  && \
    apt-get clean && \
    npm install -g gulp && \
    npm cache clean --force && \
    ln -s /usr/bin/nodejs /usr/bin/node

#TODO: remove the --force from above npm cache?
#####################################
# Composer:
#####################################

# Install composer and add its bin to the PATH.
RUN curl -s http://getcomposer.org/installer | php && \
    echo "export PATH=${PATH}:/var/www/vendor/bin" >> ~/.bashrc && \
    mv composer.phar /usr/local/bin/composer

ARG PUID=1000
ARG PGID=1000
RUN groupadd -g $PGID laradock && \
    useradd -u $PUID -g laradock -m laradock

# Source the bash
RUN . ~/.bashrc


#####################################
# omscore bootstrap
#####################################

ADD ./bootstrap.sh /var/scripts/bootstrap.sh

RUN chown -R laradock:laradock /var/scripts/
RUN echo "export PS1=\"\[\e[31m\]\u\[\e[m\]@\[\e[32m\][\[\e[m\]\[\e[32m\]omscore\[\e[m\]\[\e[32m\]]\[\e[m\]\[\e[34m\]\H\[\e[m\]:\[\e[33m\]\w\[\e[m\]\\$  \"" >> ~/.bashrc

WORKDIR /var/www

# Create any file in the shared volume to overcome docker bug
CMD chown -R laradock:laradock /var/www \
    && touch /var/shared/api-key \
    && chown -R laradock:laradock /var/shared \
    && sh /var/scripts/bootstrap.sh \
    && gulp watch # TODO: also run this as laradock
